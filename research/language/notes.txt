Syllables list for English found here:

http://www.delphiforfun.org/programs/Syllables.htm


Print individual unique syllables, sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/-/\n/g" | sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more

There are 8963 of them.


Print them sorted by number of occurrences:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/-/\n/g" | sort | uniq -c | sort -rn


Print consonant clusters, sorted for length:

cat uniqueSyllables.txt | sed -e "s/[aeiouy]/\n/g" | sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more


Print consonant clusters, sorted for number of occurrences:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/-/\n/g" | sed -e "s/[aeiouy]/\n/g" | sort | uniq -c | sort -rn


Print vowel clusters, sorted for number of occurrences:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/-/\n/g" | sed -e "s/[^aeiouy]/\n/g" | sort | uniq -c | sort -rn



Strip off numbers from any of these frequency-ordered lists, and format as a C const-string list

| sed -e "s/.*[0-9]* \([a-z]*\)/    \"\1\",/g"




Print start-of-word syllables, sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/-.*/\n/g" | sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more



Print end-of-word syllables, sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/.*-//g" | sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more



Print middle-of-word syllables, sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | grep "-" | sed -e "s/^[^\-]*-//" | grep "-" | sed -e "s/-[^\-]*$//" | sed -e "s/-/\n/g" |  sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more



Print end-of-word syllables (end) sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/.*-//" |  sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more








Print start-of-word consonant clusters, sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/-.*//g" | grep -v "^[aeiou]" | sed -e "s/^\([^aeiou][^aeiouy]*\)[aeiouy][aeiouy]*.*$/\1/" | sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more




// FIXME:

For these, we should look at whole words, not syllables
Should break up words by vowels and see what's in the middle


Print middle-of-word starting consonant clusters, sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | grep "-" | sed -e "s/^[^\-]*-//" | grep "-" | sed -e "s/-[^\-]*$//" | sed -e "s/-/\n/g" | grep -v "^[aeiou]" | sed -e "s/^\([^aeiou][^aeiouy]*\)[aeiouy][aeiouy]*.*$/\1/" |  sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more




Print non-start-of-word syllables (middle and end) sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/^[^\-]*-//" | sed -e "s/-/\n/g" |  grep -v "[aeiouy]$"  | sed -e "s/^.*[aeiouy][aeiouy]*\([^aeiou][^aeiou]*\)$/\1/" | sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more





Print end-of-word consonant clusers (may include modifier vowels) sorted for length:

grep "=" Syllables.txt | sed -e "s/.*=//" | sed -e "s/.*-//" | sed "s/^[aeiou]*[^aeiou]*[aeiouy][aeiouy]*//" |  grep -v "y" | sort | uniq | awk '{ print length, $0 }' | sort -rn -s | cut -d" " -f2- | more
